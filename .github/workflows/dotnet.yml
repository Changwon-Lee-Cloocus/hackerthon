name: .NET

on:
  push:
    branches: [ master ]
    
env: 
  GitHubPackageFeedUrl: https://nuget.pkg.github.com/Changwon-Lee-Cloocus/index.json
  LogicProjectPath: ${{ github.WORKSPACE }}/AnimalAdoption.Common.Logic

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        source-url: ${{ env.GitHubPackageFeedUrl }}
      env: 
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Package up project
      run: dotnet pack --configuration Release ${{ env.LogicProjectPath }}
    - name: Push package to GitHub registry
      run: dotnet nuget push ${{ env.LogicProjectPath }}/**/*.nupkg --skip-duplicate
    - name: Build
      run: dotnet build --configuration Release
    - name: Publish 
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
    - name: Test
      run: dotnet test --filter FullyQualifiedName\!~FunctionalTests
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        # Artifact name
        name: dotnettest
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{env.DOTNET_ROOT}}/myapp
        # The desired behavior if no files are found using the provided path.
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: dotnettest
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.PROD_KEY }}
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.PROD_KEY.subscriptionId }}
          resourceGroupName: rg-hackerthon-prod
          template: ${{ github.workspace }}/azuredeploy.json
          parameters: tenantGuid=${{ secrets.PROD_KEY.tenantId }}, webAppName=hackerthonprod, keyVaultName=hackerthoncwonprod
      - name: Azure key vault - Get Secrets
        uses: Azure/get-keyvault-secrets@v1.2
        with:
          # Name of the azure key vault
          keyvault: hackerthoncwon
          # Name of the secret to be fetched
          secrets: globalPassword
        id: myGetSecretAction
      - name: Azure App Service Settings
        uses: Azure/appservice-settings@v1
        with:
          # Name of the Azure Web App
          app-name: hackerthon
          mask-inputs: false
          # Name of an existing slot other than the production slot. Default value is production
          app-settings-json: '[{"name":"SimulatedFailureChance", "value": "0"}, {"name": "GlobalPassword", "value": ${{steps.myGetSecretAction.outputs.globalPassword}}}]'
            # Deploy ARM template
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'hackerthonprod'
          slot-name: 'production'
          package: .
      
